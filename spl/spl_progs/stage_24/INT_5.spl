
alias system_call_num R1;
alias process_table R2;
alias userSP R3;
alias ptbr R4;
alias retAddr R5;

process_table = PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16;
ptbr = [process_table + 14];

userSP = SP;
[process_table + 13]=SP;
SP = [process_table + 11]*512 - 1;


system_call_num = [([ptbr + 2*((userSP - 5)/512)]*512) + (userSP - 5) % 512];

retAddr = ([ptbr + 2*((userSP - 1)/512)]*512) + (userSP - 1) % 512;



//////////OPEN SYSTEM CALL////////
if(system_call_num == 2) then
    
    alias fileName R6;
    fileName = [([ptbr + 2*((userSP - 4)/512)]*512) + (userSP - 4) % 512];
     
    [process_table + 9] = 2;
    
    alias iter R7;
    iter = 0;

    while(iter < 8) do
        if([([process_table + 11]*512) + 496 + 2*iter] == -1) then
            break;
        endif;

        iter = iter + 1;
    endwhile;
    

    //if no free entry exists
    if(iter == 8) then
       
       [retAddr] = -3;
       [process_table + 9] = 0;
       SP = [process_table + 13];
       ireturn;
    endif;
    
    ///calling open/////
    multipush(R1,R2,R3,R4,R5,R6,R7);
    R1 = 3;
    R2 = fileName;
    call MOD_3;
    multipop(R1,R2,R3,R4,R5,R6,R7);

    if(R0 < 0) then
       [retAddr] = R0;
       [process_table + 9] = 0;
       SP = [process_table + 13];
       ireturn;
    endif;

    [([process_table + 11]*512) + 496 + 2*iter] = FILE;
    [([process_table + 11]*512) + 496 + 2*iter + 1] = R0;

    [process_table + 9] = 0;
    SP = [process_table + 13];

    [retAddr]=iter;
    ireturn;       
endif;


//////CLOSE SYSTEM CALL///////
if(system_call_num == 3) then
     
    [process_table + 9] = 3;

    alias fileDescriptor R6;
    fileDescriptor = [([ptbr + 2*((userSP - 4)/512)]*512) + (userSP - 4) % 512];
   
    if(fileDescriptor > 7 || fileDescriptor < 0 ) then
        [retAddr] = -1;
        [process_table + 9] = 0;
        SP = [process_table + 13];
        ireturn;
    endif;


    //invalid per process resource table entry
    if([([process_table + 11]*512) + 496 + 2*fileDescriptor] == -1 || [([process_table + 11]*512) + 496 + 2*fileDescriptor] != FILE) then
         [retAddr] = -1;
        [process_table + 9] = 0;
        SP = [process_table + 13];
        ireturn;
    endif;

    alias open_file_index R7;
    open_file_index = [([process_table + 11]*512) + 496 + 2*fileDescriptor + 1];

    multipush(R1,R2,R3,R4,R5,R6,R7);
    R1 = 4;
    R2 = open_file_index;
    call MOD_3;
    multipop(R1,R2,R3,R4,R5,R6,R7);

    [([process_table + 11]*512) + 496 + 2*fileDescriptor] = -1;
    [([process_table + 11]*512) + 496 + 2*fileDescriptor + 1] = -1;
    
    [retAddr] = 0;
    [process_table + 9] = 0;
    SP = [process_table + 13];
    ireturn;

endif;
