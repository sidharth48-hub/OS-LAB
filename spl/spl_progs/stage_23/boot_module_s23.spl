//init program load
loadi(65,7);
loadi(66,8);

//exception handler load
loadi(2,15);
loadi(3,16);

//disk free list load
loadi(61,2);

 
//library load
loadi(63,13);
loadi(64,14);

//inode table load
loadi(59,3);
loadi(60,4);

//timer interrupt routine load
loadi(4,17);
loadi(5,18);

//console interrupt load
loadi(8,21);
loadi(9,22);

//disk interrupt load
loadi(6,19);
loadi(7,20);

//module 0 load
loadi(40,53);
loadi(41,54);

//module 1 load
loadi(42,55);
loadi(43,56);

//module 2 load
loadi(44,57);
loadi(45,58);

//module 4 load
loadi(48,61);
loadi(49,62);

//module 5 load
loadi(50,63);
loadi(51,64);

//int4 load
loadi(10,23);
loadi(11,24);

//int6 load
loadi(14,27);
loadi(15,28);

//int7 load
loadi(16,29);
loadi(17,30);

//int8 load
loadi(18,31);
loadi(19,32);

//int9 load
loadi(20,33);
loadi(21,34);

//int 10 load
loadi(22,35);
loadi(23,36);

//int 11 load
loadi(24,37);
loadi(25,38);

//int 13 load
loadi(28,41);
loadi(29,42);

//int 14 load
loadi(30,43);
loadi(31,44);

//int 15 load
loadi(32,45);
loadi(33,46);

[TERMINAL_STATUS_TABLE]=0;

//////////////////////INIT PROGRAM////////////////////////////

PTBR = PAGE_TABLE_BASE + 20;
PTLR = 10;

//library
[PTBR+0]=63;
[PTBR+1]="0100";
[PTBR+2]=64;
[PTBR+3]="0100";

//heap
[PTBR+4]=78;
[PTBR+5]="0110";
[PTBR+6]=79;
[PTBR+7]="0110";

//code
[PTBR+8]=65;
[PTBR+9]="0100";
[PTBR+10]=66;
[PTBR+11]="0100";
[PTBR+12]=-1;
[PTBR+13]="0000";
[PTBR+14]=-1;
[PTBR+15]="0000";

//stack
[PTBR+16]=76;
[PTBR+17]="0110";
[PTBR+18]=77;
[PTBR+19]="0110";

[PROCESS_TABLE +16 + 1] = 1; //PID(process id)
[PROCESS_TABLE +16 + 3] = 1;
[PROCESS_TABLE +16 + 4] = CREATED; //STATE OF THE PROCESS
[PROCESS_TABLE +16 + 11] = 80; //USER AREA PAGE
[PROCESS_TABLE +16 +12] = 0; //KPTR
[PROCESS_TABLE +16 +13] = 8*512; //UPTR
[PROCESS_TABLE +16 +14] = PAGE_TABLE_BASE+20; //PTBR
[PROCESS_TABLE +16 +15] = 10; //PTLR;

[76*512] = [65*512 + 1];



//////////// INITIALIZE STATE OF OTHER PROCESSES/////////////////
[PROCESS_TABLE + 32 + 4] = TERMINATED;
[PROCESS_TABLE + 48 + 4] = TERMINATED;
[PROCESS_TABLE + 64 + 4] = TERMINATED;
[PROCESS_TABLE + 80 + 4] = TERMINATED;
[PROCESS_TABLE + 96 + 4] = TERMINATED;
[PROCESS_TABLE + 112 + 4] = TERMINATED;
[PROCESS_TABLE + 128 + 4] = TERMINATED;
[PROCESS_TABLE + 144 + 4] = TERMINATED;
[PROCESS_TABLE + 160 + 4] = TERMINATED;
[PROCESS_TABLE + 176 + 4] = TERMINATED;
[PROCESS_TABLE + 192 + 4] = TERMINATED;
[PROCESS_TABLE + 208 + 4] = TERMINATED;
[PROCESS_TABLE + 224 + 4] = TERMINATED;
[PROCESS_TABLE + 240 + 4] = TERMINATED;



//////////INITIALIZE MEMORY_FREE_LIST////////////
alias index R2;
index=0;

while(index<83) do
   [MEMORY_FREE_LIST+index]=1;
   index=index+1;
endwhile;

while(index<128) do
   [MEMORY_FREE_LIST+index]=0;
   index=index+1;
endwhile;   


[SYSTEM_STATUS_TABLE+3]=0; ///wait_mem_count
[SYSTEM_STATUS_TABLE+2]=45; ///mem_free_count

[DISK_STATUS_TABLE]=0;//STATUS


//////PER PROCESS RESOURCE TABLE OF INIT PROCESS//////////
alias iter R3;
iter=0;
while(iter<16) do
    [(([PROCESS_TABLE+16+11]+1)*512)-16+iter]=-1;
    iter=iter+1;
endwhile;

//////////DISK MAP TABLE ENTRIES FOR INIT PROCESS//////////
alias disk_map_table R4;
disk_map_table = DISK_MAP_TABLE+1*10;

[disk_map_table + 0]=-1;
[disk_map_table + 1]=-1;
[disk_map_table + 2]=-1;
[disk_map_table + 3]=-1;
[disk_map_table + 4]=7;
[disk_map_table + 5]=8;
[disk_map_table + 6]=-1;
[disk_map_table + 7]=-1;
[disk_map_table + 8]=-1;
[disk_map_table + 9]=-1;


//////////SEMAPHORE_TABLE/////////////

iter = 0;

while(iter < MAX_SEM_COUNT) do
   [SEMAPHORE_TABLE + iter*4] = -1;
   [SEMAPHORE_TABLE + iter*4  + 1] = 0;

   iter = iter + 1;
endwhile;


//////////FILE_STATUS_TABLE////////

iter = 0;

while(iter < MAX_FILE_NUM) do
   [FILE_STATUS_TABLE + iter*4] = -1;
   [FILE_STATUS_TABLE + iter*4 + 1] = -1;

   iter = iter + 1;
endwhile;


/////////////BUFFER_TABLE//////////////

iter = 0;

while(iter < MAX_BUFFER) do
   [BUFFER_TABLE + iter*4] = -1; //BLOCK NUMBER
   [BUFFER_TABLE + iter*4 + 1] = -1;//DIRTY BIT
   [BUFFER_TABLE + iter*4 + 2] = -1;//LOCKING PID

   iter = iter + 1;
endwhile;


return;


