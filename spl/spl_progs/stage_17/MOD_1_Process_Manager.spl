alias func_number R1;
alias PID R2;


/////free_user_area_page function///////////
if( func_number==2 ) then
    alias user_area_page_number R5;
    user_area_page_number=[PROCESS_TABLE+PID*16+11];

    ///Calling Release_page function from memory_manager_module///
    multipush(R1,R2,R5);
    R1=2;
    R2=user_area_page_number;
    call MOD_2;
    multipop(R1,R2,R5);
    return;
endif;


//////////Exit process function//////////
if(func_number==3) then
   
   ////Invoking the free_page_table from process_manager_module///
   multipush(R1,R2);
   R1=4;
   R2=PID;
   call MOD_1;
   multipop(R1,R2);

   ////Invoking the free_user_area_page from process_manager_module///
   multipush(R1,R2);
   R1=2;
   R2=PID;
   call MOD_1;
   multipop(R1,R2);
   
   [PROCESS_TABLE+PID*16+4]=TERMINATED;
   return;
endif;


//////Free_Page_Table function/////////

if(func_number==4) then
   PTBR = [PROCESS_TABLE+PID*16+14];
   [PTBR+0]=-1;
   [PTBR+1]="0000";
   [PTBR+2]=-1;
   [PTBR+3]="0000";

   alias index R5;
   index=4;

    while(index<20) do
      if([PTBR+index]!=-1) then
        ///Calling Release_page function from memory_manager_module///
        multipush(R1,R2,R5);
        R1=2;
        R2=[PTBR+index];
        call MOD_2;
        multipop(R1,R2,R5);
        [PTBR+index]=-1;
        [PTBR+index+1]="0000";
      endif;
      index=index+2;
    endwhile;       
   return;
endif;   

