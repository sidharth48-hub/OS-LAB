//init program load
loadi(65,7);
loadi(66,8);

//IDLE program load
loadi(69,11);
loadi(70,12);

//int 10 load
loadi(22,35);
loadi(23,36);

//exception handler load
loadi(2,15);
loadi(3,16);

//library load
loadi(63,13);
loadi(64,14);


//timer interrupt routine load
loadi(4,17);
loadi(5,18);

//int7 load
loadi(16,29);
loadi(17,30);



//IDLE PROCESS VIRTUAL SPACE SETTING UP

PTBR = PAGE_TABLE_BASE;
PTLR=10;

[PROCESS_TABLE + 1] = 0; //PID(process id)
[PROCESS_TABLE  + 4] = CREATED; //STATE OF THE PROCESS
[PROCESS_TABLE + 11] = 82; //USER AREA PAGE
[PROCESS_TABLE + 12] = 0; //KPTR
[PROCESS_TABLE + 13] = 8*512; //UPTR
[PROCESS_TABLE + 14] = PAGE_TABLE_BASE; //PTBR
[PROCESS_TABLE + 15] = 10; //PTLR;


//library
[PTBR+0]=63;
[PTBR+1]="0100";
[PTBR+2]=64;
[PTBR+3]="0100";

//heap
[PTBR+4]=-1;
[PTBR+5]="0000";
[PTBR+6]=-1;
[PTBR+7]="0000";

//code
[PTBR+8]=69;
[PTBR+9]="0100";
[PTBR+10]=70;
[PTBR+11]="0100";
[PTBR+12]=-1;
[PTBR+13]="0000";
[PTBR+14]=-1;
[PTBR+15]="0000";

//stack
[PTBR+16]=81;
[PTBR+17]="0110";
[PTBR+18]=-1;
[PTBR+19]="0000";

[81*512] = [69*512 + 1];


//INIT PROCESS VIRTUAL SPACE SETTING UP

PTBR = PAGE_TABLE_BASE + 20;
PTLR = 10;

[PROCESS_TABLE +16 + 1] = 1; //PID(process id)
[PROCESS_TABLE +16 + 4] = RUNNING; //STATE OF THE PROCESS
[PROCESS_TABLE +16 + 11] = 80; //USER AREA PAGE
[PROCESS_TABLE +16 +12] = 0; //KPTR
[PROCESS_TABLE +16 +13] = 8*512; //UPTR
[PROCESS_TABLE +16 +14] = PAGE_TABLE_BASE+20; //PTBR
[PROCESS_TABLE +16 +15] = 10; //PTLR;

//library
[PTBR+0]=63;
[PTBR+1]="0100";
[PTBR+2]=64;
[PTBR+3]="0100";

//heap
[PTBR+4]=78;
[PTBR+5]="0110";
[PTBR+6]=79;
[PTBR+7]="0110";

//code
[PTBR+8]=65;
[PTBR+9]="0100";
[PTBR+10]=66;
[PTBR+11]="0100";
[PTBR+12]=-1;
[PTBR+13]="0000";
[PTBR+14]=-1;
[PTBR+15]="0000";

//stack
[PTBR+16]=76;
[PTBR+17]="0110";
[PTBR+18]=77;
[PTBR+19]="0110";


[76*512]=[65*512 + 1];
SP=8*512;

[SYSTEM_STATUS_TABLE + 1] = 1; //Current PID of the user process running
ireturn;